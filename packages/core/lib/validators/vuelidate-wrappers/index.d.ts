import chineseIdNumber from './chinese-id-number';
export { chineseIdNumber };
export declare function required(message?: string): (ctor: any, prop: string) => void;
export declare function requiredIf(locator: any, message?: string): (ctor: any, prop: string) => void;
export declare function requiredUnless(locator: any, message?: string): (ctor: any, prop: string) => void;
export declare function minLength(min: number, message?: string): (ctor: any, prop: string) => void;
export declare function maxLength(max: number, message?: string): (ctor: any, prop: string) => void;
export declare function minValue(min: number, message?: string): (ctor: any, prop: string) => void;
export declare function maxValue(max: number, message?: string): (ctor: any, prop: string) => void;
export declare function between(min: number, max: number, message?: string): (ctor: any, prop: string) => void;
export declare function alpha(message?: string): (ctor: any, prop: string) => void;
export declare function numeric(message?: string): (ctor: any, prop: string) => void;
export declare function alphaNum(message?: string): (ctor: any, prop: string) => void;
export declare function integer(message?: string): (ctor: any, prop: string) => void;
export declare function decimal(message?: string): (ctor: any, prop: string) => void;
export declare function email(message?: string): (ctor: any, prop: string) => void;
export declare function ipAddress(message?: string): (ctor: any, prop: string) => void;
export declare function macAddress(separator?: string, message?: string): (ctor: any, prop: string) => void;
export declare function url(message?: string): (ctor: any, prop: string) => void;
export declare function sameAs(locator: any, message?: string): (ctor: any, prop: string) => void;
